on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Tests

jobs:
  test_cpp:
    name: Test C++ (${{ matrix.cfg.label }})
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - {os: ubuntu-latest,  gcc: 9, label: "linux / gcc 9"}
          - {os: ubuntu-latest,  gcc: 11, label: "linux / gcc 11"}
          - {os: macos-11, label: "macos 11"}
          - {os: macos-12, label: "macos 12"}
          - {os: windows-latest, label: "windows"}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up GCC (Linux)
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.cfg.gcc }}
          platform: x64
        if: runner.os == 'Linux'

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: fastscapelib-test
          channels: conda-forge
          channel-priority: strict

      - name: Install dependencies (Conda)
        shell: bash -l {0}
        run: conda install cmake xtensor

      - name: Configure Fastscapelib (CMake)
        shell: bash -l {0}
        run: |
          cmake -S . -B build \
            -DFS_DOWNLOAD_GTEST=ON \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Build Fastscapelib
        shell: bash -l {0}
        run: cmake --build build

      - name: Run tests
        shell: bash -l {0}
        run: |
          cd build
          ctest -T test --output-on-failure .

  test_py:
    name: Test Python (${{ matrix.os }} / ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: fastscapelib-test
          channels: conda-forge
          channel-priority: strict

      - name: Install dependencies (Conda)
        shell: bash -l {0}
        run: |
          conda install python=${{ matrix.python-version }} numpy scikit-build-core cmake xtensor-python pytest pip

      - name: Build and install Fastscapelib Python
        shell: bash -l {0}
        run: |
          python -m pip install . -v --no-build-isolation

      - name: Run tests
        shell: bash -l {0}
        run: |
          pytest python/fastscapelib/tests -vv --color=yes
